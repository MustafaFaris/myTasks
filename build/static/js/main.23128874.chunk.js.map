{"version":3,"sources":["helpers.ts","context.tsx","components/header/header.style.ts","components/toggle/toggle.style.ts","components/toggle/toggle.tsx","components/header/header.tsx","components/tasksView/tasksView.style.js","components/task/task.style.ts","components/card/card.style.ts","components/card/card.tsx","components/checkbox/checkbox.style.ts","components/checkbox/check.icon.tsx","components/checkbox/checkbox.tsx","components/task/trash.icon.tsx","components/popupMenu/popupMenu.style.ts","components/popupMenu/popupMenu.tsx","components/button/button.style.ts","components/button/button.tsx","components/task/task.tsx","components/tasksView/tasksView.tsx","components/footer/footer.style.ts","components/addTask/addTask.style.ts","components/addMenu/addMenu.style.ts","components/addMenu/addMenu.tsx","components/textInput/textInput.style.ts","components/textInput/textInput.tsx","components/createTaskMenu/createTaskMenu.style.ts","components/createTaskMenu/createTaskMenu.tsx","components/addTask/addTask.tsx","components/footer/footer.tsx","App.tsx","index.tsx"],"names":["getRandomID","Math","floor","random","setLocalStorage","name","value","localStorage","setItem","JSON","stringify","getLocalStorage","parse","getItem","AppContext","React","createContext","TasksReducer","tasksList","action","type","tasks","newTasks","task","filter","id","taskID","tasksClone","slice","find","done","isChecked","ContextProvider","children","useReducer","updateTasksList","useState","local","undefined","showDoneTasks","getDefaultDoneTask","setDoneTasks","Provider","setDoneTasksVisibility","StyledHeader","styled","div","StyledToggle","Toggle","toggled","defaultChecked","onChange","isToggled","setToggled","classes","classNames","className","onClick","Header","useContext","StyledTasksView","StyledTask","StyledCard","Card","StyledCheckbox","span","CheckIcon","aria-hidden","data-prefix","data-icon","xmlns","viewBox","width","height","fill","d","Checkbox","checked","setChecked","TrashIcon","StyledPopupMenu","PopupMenu","title","actionButtons","onClose","StyledButton","button","Button","danger","props","Task","isDeleting","setDeleting","taskType","TasksView","length","map","StyledFooter","StyledAddTask","StyledAddMenu","AddMenu","setClicked","setCreating","StyledTextInput","TextInput","forwardRef","ref","label","required","error","htmlFor","autoComplete","StyledCreateTask","CreateTask","creating","taskTitle","setTaskTitle","setError","taskTitleRef","useRef","useEffect","setTimeout","current","focus","handleCreate","onSubmit","e","currentTarget","placeholder","AddTask","isClicked","Footer","AppStyle","App","defaultTasks","getTasks","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.23128874.chunk.js","sourcesContent":["export const getTasks = (): Tasks => {\n  const defaultTasks: any = [\n    {\n      id: getRandomID(),\n      title: \"Got to gym\",\n      type: \"task\",\n      done: false,\n    },\n    {\n      id: getRandomID(),\n      title: \"Do the laundry\",\n      type: \"event\",\n      done: false,\n    },\n    {\n      id: getRandomID(),\n      title: \"Potato Potato\",\n      type: \"task\",\n      done: true,\n    },\n  ];\n\n  const localTasks = getLocalStorage(\"tasks\");\n  return localTasks || defaultTasks;\n};\n\nexport const getRandomID = (): number => Math.floor(Math.random() * 10000);\n\nexport const setLocalStorage = (name: string, value: unknown): void => {\n  localStorage.setItem(name, JSON.stringify(value));\n};\n\nexport const getLocalStorage = (name: string): any => {\n  return JSON.parse(localStorage.getItem(name) || \"\");\n};\n","import React, { useReducer, useState } from \"react\";\nimport { setLocalStorage, getLocalStorage } from \"./helpers\";\n\nexport const AppContext = React.createContext<any>({});\n\ntype Actions =\n  | { type: \"set\"; tasks: Task[] }\n  | { type: \"add\"; task: Task }\n  | { type: \"remove\"; taskID: number }\n  | { type: \"check\"; taskID: number; isChecked: boolean };\n\nconst getDefaultDoneTask = (): boolean => {\n  const local: { showDoneTasks: boolean } = getLocalStorage(\"showDoneTasks\");\n  return local?.showDoneTasks !== undefined ? local.showDoneTasks : true;\n};\n\nconst TasksReducer = (tasksList: Task[], action: Actions) => {\n  switch (action.type) {\n    case \"set\": {\n      return action.tasks;\n    }\n    case \"add\": {\n      const newTasks = [action.task, ...tasksList];\n      setLocalStorage(\"tasks\", newTasks);\n      return newTasks;\n    }\n    case \"remove\": {\n      const newTasks = tasksList.filter((task: Task) => task.id !== action.taskID);\n      setLocalStorage(\"tasks\", newTasks);\n      return newTasks;\n    }\n    case \"check\": {\n      const tasksClone: Tasks = tasksList.slice();\n      tasksClone.find((task) => task.id === action.taskID).done = action.isChecked;\n      setLocalStorage(\"tasks\", tasksClone);\n      return tasksClone;\n    }\n    default:\n      return tasksList;\n  }\n};\n\nconst ContextProvider: React.FC = ({ children }) => {\n  const [tasksList, updateTasksList] = useReducer(TasksReducer, []);\n  const [showDoneTasks, setDoneTasks] = useState<boolean>(getDefaultDoneTask());\n\n  const setDoneTasksVisibility = (isChecked: boolean): void => {\n    setDoneTasks(isChecked);\n    setLocalStorage(\"showDoneTasks\", { showDoneTasks: isChecked });\n  };\n\n  return (\n    <AppContext.Provider value={{ tasksList, updateTasksList, showDoneTasks, setDoneTasksVisibility }}>\n      {children}\n    </AppContext.Provider>\n  );\n};\n\nexport default ContextProvider;\n","import styled from \"@emotion/styled\";\n\nconst StyledHeader = styled.div`\n  position: relative;\n  background: #64dacf;\n  padding: 20px;\n  border-bottom-left-radius: 15px;\n  border-bottom-right-radius: 15px;\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\n  z-index: 1;\n\n  .user {\n    position: relative;\n    display: inline-block;\n    height: 30px;\n    width: 30px;\n    background: #ddd;\n    color: white;\n    border-radius: 50%;\n\n    span {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n\n  .page-title {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 10px;\n    font-weight: 500;\n    color: white;\n    font-size: 20px;\n    user-select: none;\n\n    .toggle-done {\n      display: flex;\n      align-items: center;\n      font-size: 14px;\n      font-weight: normal;\n\n      .toggle {\n        margin-left: 5px;\n      }\n    }\n  }\n`;\n\nexport default StyledHeader;\n","import styled from \"@emotion/styled\";\n\nconst StyledToggle = styled.div`\n  position: relative;\n  display: inline-block;\n  height: 24px;\n  width: 45px;\n  background: white;\n  border-radius: 12px;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 2px;\n    left: 3px;\n    height: 20px;\n    width: 20px;\n    border-radius: 50%;\n    background: #d4d4d4;\n    transition: 0.2s ease;\n  }\n  &.toggled:after {\n    left: calc(100% - 23px);\n    background: #64dacf;\n  }\n`;\n\nexport default StyledToggle;\n","import React, { FC, useState } from \"react\";\nimport classNames from \"classnames\";\nimport StyledToggle from \"./toggle.style\";\n\ninterface Props {\n  toggled?: boolean;\n  defaultChecked?: boolean;\n  onChange: (isToggled: boolean) => void;\n}\n\nconst Toggle: FC<Props> = ({ toggled, defaultChecked, onChange }) => {\n  const [isToggled, setToggled] = useState(toggled || defaultChecked);\n  const onToggleChange = () => {\n    setToggled(!isToggled);\n    if (onChange) {\n      onChange(!isToggled);\n    }\n  };\n  const classes = classNames(\"toggle\", { toggled: isToggled });\n\n  return <StyledToggle className={classes} onClick={() => onToggleChange()} />;\n};\n\nexport default Toggle;\n","import React, { FC, useContext } from \"react\";\nimport { AppContext } from \"./../../context\";\nimport StyledHeader from \"./header.style\";\nimport Toggle from \"components/toggle\";\n\nconst Header: FC = () => {\n  const { showDoneTasks, setDoneTasksVisibility } = useContext(AppContext);\n\n  return (\n    <StyledHeader>\n      <span className=\"user\">\n        <span>M</span>\n      </span>\n      <div className=\"page-title\">\n        My Tasks\n        <span className=\"toggle-done\">\n          Show done tasks <Toggle onChange={setDoneTasksVisibility} defaultChecked={showDoneTasks} />\n        </span>\n      </div>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import styled from \"@emotion/styled\";\n\nconst StyledTasksView = styled.div`\n  padding: 15px;\n  max-width: 1140px;\n  margin: auto;\n\n  .task {\n    margin-bottom: 10px;\n  }\n\n  .no-tasks {\n    margin: 60px 0;\n    text-align: center;\n    color: #888;\n  }\n`;\n\nexport default StyledTasksView;\n","import styled from \"@emotion/styled\";\n\nconst StyledTask = styled.div`\n  .task-card {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 14px;\n    font-weight: 500;\n    transition: 0.2s ease;\n    user-select: none;\n    color: #999;\n    animation: slideDown 0.2s;\n\n    .checkbox {\n      flex-shrink: 0;\n    }\n\n    .task-content {\n      max-width: calc(100% - 35px);\n      word-break: break-all;\n      display: flex;\n      align-items: center;\n      .task-type {\n        display: inline-block;\n        height: 10px;\n        min-width: 10px;\n        border-radius: 50%;\n        margin-right: 15px;\n        margin-bottom: 0;\n\n        &.task {\n          background: #60e2dd;\n        }\n        &.event {\n          background: #a87ac4;\n        }\n      }\n    }\n\n    .task-controls {\n      display: flex;\n      align-items: center;\n\n      .remove-btn {\n        background: none;\n        border: none;\n        outline: none;\n        font-size: 16px;\n        color: #ec407a;\n        cursor: pointer;\n        user-select: none;\n      }\n\n      .checkbox {\n        margin-left: 8px;\n      }\n    }\n  }\n\n  &.done {\n    .task-card {\n      text-decoration: line-through;\n      color: #ccc;\n\n      .task-type {\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @keyframes slideDown {\n    0% {\n      top: -50px;\n    }\n    100% {\n      top: 0px;\n    }\n  }\n`;\n\nexport default StyledTask;\n","import styled from \"@emotion/styled\";\n\nconst StyledCard = styled.div`\n  background: white;\n  padding: 20px 10px;\n  border-radius: 15px;\n  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.1);\n`;\nexport default StyledCard;\n","import React, { FC } from \"react\";\nimport StyledCard from \"./card.style\";\n\ninterface Props {\n  className: string;\n}\n\nconst Card: FC<Props> = ({ className, children }) => {\n  return <StyledCard className={className}>{children}</StyledCard>;\n};\n\nexport default Card;\n","import styled from \"@emotion/styled\";\n\nconst StyledCheckbox = styled.span`\n  position: relative;\n  display: inline-block;\n  border: solid 1px #dddddd;\n  border-radius: 8px;\n  height: 30px;\n  width: 30px;\n  transition: 0.2s ease;\n  cursor: pointer;\n  -webkit-tap-highlight-color: transparent;\n\n  svg {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    color: transparent;\n    transform: translate(-50%, -50%) rotate(45deg);\n    transition: ease 0.2s;\n  }\n\n  &.checked {\n    border-color: #64dacf;\n\n    svg {\n      color: #64dacf;\n      transform: translate(-50%, -50%) rotate(0deg);\n    }\n  }\n`;\nexport default StyledCheckbox;\n","import React, { FC } from \"react\";\n\nconst CheckIcon: FC = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      data-prefix=\"fas\"\n      data-icon=\"check\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n      className=\"prefix__svg-inline--fa prefix__fa-check prefix__fa-w-16 prefix__fa-9x\"\n      width=\"1em\"\n      height=\"1em\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\"\n      />\n    </svg>\n  );\n};\n\nexport default CheckIcon;\n","import React, { FC, useState } from \"react\";\nimport classNames from \"classnames\";\nimport StyledCheckbox from \"./checkbox.style\";\nimport CheckIcon from \"./check.icon\";\n\ninterface Props {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  onChange: (isChecked: boolean) => void;\n}\n\nconst Checkbox: FC<Props> = ({ checked, defaultChecked, onChange }) => {\n  const [isChecked, setChecked] = useState<boolean>(checked || defaultChecked || false);\n  const onCheckChange = () => {\n    setChecked(!isChecked);\n    if (onChange) onChange(!isChecked);\n  };\n  const classes = classNames(\"checkbox\", { checked: checked || isChecked });\n\n  return (\n    <StyledCheckbox className={classes} onClick={() => onCheckChange()}>\n      <CheckIcon />\n    </StyledCheckbox>\n  );\n};\n\nexport default Checkbox;\n","import React, { FC } from \"react\";\n\nconst TrashIcon: FC = () => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      data-prefix=\"fas\"\n      data-icon=\"trash\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 448 512\"\n      className=\"prefix__svg-inline--fa prefix__fa-trash prefix__fa-w-14 prefix__fa-2x\"\n      width=\"1em\"\n      height=\"1em\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M432 32H312l-9.4-18.7A24 24 0 00281.1 0H166.8a23.72 23.72 0 00-21.4 13.3L136 32H16A16 16 0 000 48v32a16 16 0 0016 16h416a16 16 0 0016-16V48a16 16 0 00-16-16zM53.2 467a48 48 0 0047.9 45h245.8a48 48 0 0047.9-45L416 128H32z\"\n      />\n    </svg>\n  );\n};\n\nexport default TrashIcon;\n","import styled from \"@emotion/styled\";\n\nconst StyledPopupMenu = styled.div`\n  .popup-menu {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    z-index: 3;\n    width: 100%;\n    min-height: 20vh;\n    max-height: 65vh;\n    padding: 20px;\n    background: white;\n    border-top-left-radius: 15px;\n    border-top-right-radius: 15px;\n    box-shadow: 0px -1px 2px rgba(0, 0, 0, 0.1);\n    text-align: left;\n    padding-bottom: 50px;\n    overflow: auto;\n    animation: slideUp 0.2s;\n\n    .popup-title {\n      margin-bottom: 20px;\n      font-size: 22px;\n      font-weight: 500;\n      color: #999;\n    }\n\n    .action-buttons {\n      position: fixed;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n      display: flex;\n      height: 50px;\n      background: white;\n\n      button {\n        position: relative;\n        flex-grow: 1;\n\n        &:not(:last-of-type):after {\n          content: \"\";\n          position: absolute;\n          top: 50%;\n          right: 0;\n          transform: translateY(-50%);\n          height: 20px;\n          width: 1px;\n          background: #f5f5f5;\n        }\n      }\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    .popup-menu {\n      width: 50vw;\n      bottom: 50%;\n      left: 50%;\n      border-radius: 15px;\n      transform: translate(-50%, 50%);\n      animation: fadeIn 0.1s;\n\n      .action-buttons {\n        position: absolute;\n      }\n    }\n  }\n\n  .popup-blocker {\n    position: fixed;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n    height: 100%;\n    width: 100%;\n    z-index: 2;\n  }\n\n  @keyframes slideUp {\n    0% {\n      bottom: -50px;\n    }\n    100% {\n      bottom: 0px;\n    }\n  }\n  @keyframes fadeIn {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nexport default StyledPopupMenu;\n","import React, { FC, ReactElement } from \"react\";\nimport StyledPopupMenu from \"./popupMenu.style\";\n\ninterface Props {\n  title: string;\n  actionButtons: ReactElement;\n  onClose: () => void;\n}\n\nconst PopupMenu: FC<Props> = ({ title, actionButtons, onClose, children }) => {\n  return (\n    <StyledPopupMenu>\n      <div className=\"popup-menu\">\n        <div className=\"popup-title\">{title}</div>\n        {children}\n        <div className=\"action-buttons\">{actionButtons}</div>\n      </div>\n      <div className=\"popup-blocker\" onClick={onClose} />\n    </StyledPopupMenu>\n  );\n};\n\nexport default PopupMenu;\n","import styled from \"@emotion/styled\";\n\nconst StyledButton = styled.button`\n  background: transparent;\n  border: none;\n  padding: 10px 20px;\n  font-size: 16px;\n  font-weight: 500;\n  color: #60e2dd;\n  outline: none;\n  cursor: pointer;\n  transition: 0.05s ease;\n  border-radius: 15px;\n  user-select: none;\n  -webkit-tap-highlight-color: transparent;\n\n  &:active {\n    background: #f5f5f5;\n  }\n\n  &.danger {\n    color: #ec407a;\n  }\n`;\n\nexport default StyledButton;\n","import React, { FC } from \"react\";\nimport classNames from \"classnames\";\nimport StyledButton from \"./button.style\";\n\ninterface Props {\n  onClick: () => void;\n  danger?: boolean;\n  [key: string]: any;\n}\n\nconst Button: FC<Props> = ({ onClick, danger, children, ...props }) => {\n  const classes = classNames(\"button\", { danger: danger });\n  return (\n    <StyledButton onClick={onClick} className={classes} {...props} type=\"button\">\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React, { FC, useContext, useState } from \"react\";\nimport classNames from \"classnames\";\nimport StyledTask from \"./task.style\";\nimport Card from \"components/card\";\nimport Checkbox from \"components/checkbox\";\nimport TrashIcon from \"./trash.icon\";\nimport { AppContext } from \"./../../context\";\nimport PopupMenu from \"components/popupMenu\";\nimport Button from \"components/button\";\n\ninterface Props {\n  task: Task;\n}\n\nconst Task: FC<Props> = ({ task }) => {\n  const { updateTasksList } = useContext(AppContext);\n  const [isDeleting, setDeleting] = useState<boolean>(false);\n  const classes: { task: string; taskType: string } = {\n    task: classNames(\"task\", { done: task.done }),\n    taskType: classNames(\"task-type\", task.type),\n  };\n  return (\n    <StyledTask className={classes.task}>\n      <Card className=\"task-card\">\n        <div className=\"task-content\">\n          <span className={classes.taskType} />\n          <span>{task.title}</span>\n        </div>\n        <div className=\"task-controls\">\n          <button className=\"remove-btn\" onClick={() => setDeleting(true)}>\n            <TrashIcon />\n          </button>\n          {isDeleting && (\n            <PopupMenu\n              title=\"Deleting Task\"\n              actionButtons={\n                <>\n                  <Button onClick={() => setDeleting(false)}>Cancel</Button>\n                  <Button danger onClick={() => updateTasksList({ type: \"remove\", taskID: task.id })}>\n                    Delete\n                  </Button>\n                </>\n              }\n              onClose={() => setDeleting(false)}\n            >\n              You are about to delete a task, are you sure?\n            </PopupMenu>\n          )}\n          <Checkbox\n            onChange={(isChecked) => updateTasksList({ type: \"check\", taskID: task.id, isChecked })}\n            checked={task.done}\n          />\n        </div>\n      </Card>\n    </StyledTask>\n  );\n};\n\nexport default Task;\n","import React, { FC, useContext } from \"react\";\nimport { AppContext } from \"./../../context\";\nimport StyledTasksView from \"./tasksView.style\";\nimport Task from \"components/task\";\n\nconst TasksView: FC = () => {\n  const { tasksList, showDoneTasks } = useContext(AppContext);\n  return (\n    <StyledTasksView>\n      {tasksList.length ? (\n        tasksList\n          .filter((task: Task): Task[] => !task.done || showDoneTasks)\n          .map((task: Task) => <Task key={\"task-\" + task.id} task={task} />)\n      ) : (\n        <p className=\"no-tasks\">You don&apos;t have any tasks</p>\n      )}\n    </StyledTasksView>\n  );\n};\n\nexport default TasksView;\n","import styled from \"@emotion/styled\";\n\nconst StyledFooter = styled.div`\n  position: fixed;\n  text-align: center;\n  bottom: 0;\n  width: 100%;\n  z-index: 1;\n`;\n\nexport default StyledFooter;\n","import styled from \"@emotion/styled\";\n\nconst StyledAddTask = styled.div`\n  position: relative;\n\n  .add-task-button {\n    position: relative;\n    z-index: 2;\n    top: -12px;\n    width: 50px;\n    height: 50px;\n    display: inline-block;\n    background: #64dacf;\n    transition: 0.2s ease;\n    border: none;\n    border-radius: 50%;\n    color: white;\n    outline: none;\n    user-select: none;\n    cursor: pointer;\n    -webkit-tap-highlight-color: transparent;\n\n    &.isClicked {\n      background: #ec407a;\n\n      span {\n        transform: translate(-50%, -50%) rotate(-45deg);\n      }\n    }\n\n    span {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transition: 0.2s ease;\n      transform: translate(-50%, -50%);\n      font-size: 30px;\n    }\n  }\n`;\n\nexport default StyledAddTask;\n","import styled from \"@emotion/styled\";\n\nconst StyledAddMenu = styled.div`\n  ul {\n    position: absolute;\n    left: 50%;\n    z-index: 1;\n    transform: translateX(-50%);\n    bottom: 60px;\n    border-radius: 15px;\n    padding: 10px 0;\n    background: white;\n    list-style: none;\n    box-shadow: 5px 0px 8px rgba(0, 0, 0, 0.1);\n    animation: mymove 0.2s;\n    overflow: hidden;\n    min-width: 90vw;\n\n    li {\n      position: relative;\n      white-space: nowrap;\n      padding: 20px;\n      text-align: left;\n      transition: 0.05s ease;\n      user-select: none;\n      cursor: pointer;\n      -webkit-tap-highlight-color: transparent;\n\n      &:active {\n        background: #eee;\n      }\n\n      &:not(:last-of-type):after {\n        content: \"\";\n        position: absolute;\n        bottom: 0;\n        left: 50%;\n        transform: translate(-50%);\n        width: 90%;\n        height: 1px;\n        background: #eee;\n      }\n    }\n  }\n\n  .add-menu-blocker {\n    position: fixed;\n    top: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.5);\n    height: 100%;\n    width: 100%;\n  }\n\n  @keyframes mymove {\n    0% {\n      bottom: 30px;\n    }\n    100% {\n      bottom: 60px;\n    }\n  }\n`;\n\nexport default StyledAddMenu;\n","import React, { FC } from \"react\";\nimport StyledAddMenu from \"./addMenu.style\";\n\ninterface Props {\n  setClicked: (isClicked: boolean) => void;\n  setCreating: (creating: \"task\" | \"event\") => void;\n}\n\nconst AddMenu: FC<Props> = ({ setClicked, setCreating }) => {\n  return (\n    <StyledAddMenu>\n      <ul>\n        <li\n          onClick={() => {\n            setClicked(false);\n            setCreating(\"task\");\n          }}\n        >\n          Add a new Task\n        </li>\n        <li\n          onClick={() => {\n            setClicked(false);\n            setCreating(\"event\");\n          }}\n        >\n          Add a new Event\n        </li>\n      </ul>\n      <div className=\"add-menu-blocker\" onClick={() => setClicked(false)} />\n    </StyledAddMenu>\n  );\n};\n\nexport default AddMenu;\n","import styled from \"@emotion/styled\";\n\nconst StyledTextInput = styled.div`\n  margin-bottom: 10px;\n\n  .required {\n    display: inline-block;\n    margin-left: 3px;\n    color: red;\n  }\n\n  &.has-error input {\n    border-color: red;\n  }\n\n  label {\n    display: block;\n    font-size: 14px;\n    font-weight: 500;\n    color: #999;\n    margin-bottom: 5px;\n    text-transform: capitalize;\n  }\n\n  input {\n    width: 100%;\n    padding: 8px;\n    font-size: 16px;\n    border-radius: 8px;\n    border: solid 1px #ddd;\n    transition: 0.2s ease;\n\n    &::placeholder {\n      color: #ddd;\n    }\n\n    &:focus {\n      outline: none;\n      border-color: #60e2dd;\n    }\n  }\n`;\nexport default StyledTextInput;\n","import React from \"react\";\nimport StyledTextInput from \"./textInput.style\";\n\ninterface Props {\n  label: string;\n  name: string;\n  required?: boolean;\n  onChange?: () => void;\n  error?: boolean;\n  [key: string]: any;\n}\n\nconst TextInput = React.forwardRef<HTMLInputElement, Props>(\n  ({ label, name = \"input\", required, error, ...props }, ref) => {\n    return (\n      <StyledTextInput className={`text-input ${error ? \"has-error\" : \"\"}`}>\n        <label htmlFor={name}>\n          {label}\n          {required && <span className=\"required\">*</span>}\n        </label>\n        <input type=\"text\" name={name} autoComplete=\"off\" ref={ref} required={required} {...props} />\n      </StyledTextInput>\n    );\n  }\n);\n\nexport default TextInput;\n","import styled from \"@emotion/styled\";\n\nconst StyledCreateTask = styled.div`\n  .error {\n    color: red;\n    font-size: 14px;\n  }\n`;\n\nexport default StyledCreateTask;\n","import React, { FC, useState, useRef, useEffect, useContext } from \"react\";\nimport { AppContext } from \"./../../context\";\nimport PopupMenu from \"components/popupMenu\";\nimport Button from \"components/button\";\nimport TextInput from \"components/textInput\";\nimport StyledCreateTaskMenu from \"./createTaskMenu.style\";\nimport { getRandomID } from \"./../../helpers\";\n\ninterface Props {\n  creating: string;\n  setCreating: (creating: string | null) => void;\n}\n\nconst CreateTask: FC<Props> = ({ creating, setCreating }) => {\n  const { updateTasksList } = useContext(AppContext);\n  const [taskTitle, setTaskTitle] = useState(\"\");\n  const [error, setError] = useState<string | null>(null);\n  const taskTitleRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    setTimeout(() => {\n      taskTitleRef.current?.focus();\n    }, 500);\n  }, []);\n\n  const handleCreate = () => {\n    if (taskTitle) {\n      updateTasksList({ type: \"add\", task: { id: getRandomID(), title: taskTitle, type: creating } });\n      setCreating(null);\n    } else {\n      setError(`Please include ${creating} title!`);\n    }\n  };\n\n  return (\n    <StyledCreateTaskMenu>\n      <form onSubmit={handleCreate}>\n        <PopupMenu\n          title={`Create a new ${creating}`}\n          onClose={(): void => setCreating(null)}\n          actionButtons={\n            <>\n              <Button onClick={(): void => setCreating(null)}>Cancel</Button>\n              <Button onClick={handleCreate}>Create</Button>\n            </>\n          }\n        >\n          <TextInput\n            onChange={(e: React.FormEvent<HTMLInputElement>): void => {\n              setError(null);\n              setTaskTitle(e.currentTarget.value);\n            }}\n            required\n            placeholder=\"e.g. Go to gym\"\n            name=\"task-label\"\n            label={`${creating} title`}\n            error={error}\n            ref={taskTitleRef}\n          />\n          {error && <span className=\"error\">{error}</span>}\n        </PopupMenu>\n      </form>\n    </StyledCreateTaskMenu>\n  );\n};\n\nexport default CreateTask;\n","import React, { FC, useState } from \"react\";\nimport classNames from \"classnames\";\nimport StyledAddTask from \"./addTask.style\";\nimport AddMenu from \"components/addMenu\";\nimport CreateTaskMenu from \"components/createTaskMenu\";\n\nconst AddTask: FC = () => {\n  const [isClicked, setClicked] = useState<boolean>(false);\n  const [creating, setCreating] = useState<string | null>(null);\n\n  const classes: string = classNames(\"add-task-button\", { isClicked });\n\n  return (\n    <StyledAddTask>\n      <button className={classes} onClick={() => setClicked(!isClicked)}>\n        <span>+</span>\n      </button>\n      {isClicked && <AddMenu setClicked={setClicked} setCreating={setCreating} />}\n      {creating && <CreateTaskMenu creating={creating} setCreating={setCreating} />}\n    </StyledAddTask>\n  );\n};\n\nexport default AddTask;\n","import React, { FC } from \"react\";\nimport StyledFooter from \"./footer.style\";\nimport AddTask from \"components/addTask\";\n\nconst Footer: FC = () => {\n  return (\n    <StyledFooter>\n      <AddTask />\n    </StyledFooter>\n  );\n};\n\nexport default Footer;\n","import React, { FC, useContext, useEffect } from \"react\";\nimport { AppContext } from \"./context\";\nimport \"./styles.css\";\nimport Header from \"components/header\";\nimport TasksView from \"components/tasksView\";\nimport Footer from \"components/footer\";\nimport styled from \"@emotion/styled\";\nimport { getTasks } from \"./helpers\";\n\nconst App: FC = () => {\n  const { updateTasksList } = useContext(AppContext);\n\n  useEffect(() => {\n    const tasks = getTasks();\n    updateTasksList({ type: \"set\", tasks });\n  }, []);\n\n  return (\n    <AppStyle className=\"App\">\n      <Header />\n      <TasksView />\n      <Footer />\n    </AppStyle>\n  );\n};\n\nconst AppStyle = styled.div`\n  position: relative;\n  padding-bottom: 50px;\n  overflow: auto;\n  background: #f6f7fa;\n  height: 100%;\n  width: 100%;\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ContextProvider from \"./context\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <ContextProvider>\n      <App />\n    </ContextProvider>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}